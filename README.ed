# Git Notes 
## Working with git locally

- 'git init' : Create local directy 
- 'git clone <URL>' : Clone respository from given <URL>
- 'git status' : tells us what we need to know about our respository

- 'git add <FILE>' : adds <FILE> to the staging area
- 'git commit' : open a text editor to write commit message
    - 'git commit -m "MESSAGE"' : writes MESSAGE as a commit without a text editor

- 'git log ' : shows the log (history) of our commits
    - 'git log --oneline' : shows the shorter online commit


# Working with remotes
- 'git remote add <NAME> <URL>' : adds the <URL> as a remote with the name <NAME>
    - <NAME> is by convention called 'origin'
- 'git remote rm <NAME>' : removes the remote called <NAME>
- 'git remote -v' : look at all the remotes you have
- 'git push <where> <what>' : push the <what> branch to <where>
   - 'git push origin main'
- 'git pull <WHERE> <WHAT>' : pulls the <WHAT> branch in <WHERE> to local computer   


## Branches
 
 - 'git branch <NAME>' : create brnach <NAME> where you are (HEAD)
 - 'git switch <NAME>' : move to the branch <NAME>
      - 'git checkout <NAME>': also move to the branch <NAME>
 - 'git switch -c <NAME>': create and move to the brnch <NAME> in 1 command
      - 'git checkout -b <NAME>' : also create and moce to branch <NAME> in 1 command.
 - 'git merge <BRANCH>' : merge <BRANCH> into your current branch
 - 'git rebase' : command to change the history of a commit
       commit from 'git merge' can be automatically combined.
    - 'git rebase <BRANCH>' : incorporate chnages from <BRANCH> into current branch
    - 'git status' : is your friend
    - 'git add <FILE>': to mark conflict resolution
    - 'git rebase --continue' : move to next commit in rebase
    - 'git rebase --abort' : undo git rebase step
